set testdir [file dirname $argv0]
source $testdir/fuzztester.tcl
set testprefix complex_transaction
set testprefix database_corruption

proc setup_transaction {tname sql} {
  global db
  sqlite db $tname
  db eval "$sql"
}

proc check_transaction {tname sql} {
  uplevel "catchsql {SELECT * FROM sqlite_master WHERE name = 't'}"
}

do_test complex-1.1 {
  setup_transaction test1 {
    CREATE TABLE t(a, b);
    INSERT INTO t VALUES(1, 2);
    INSERT INTO t VALUES(3, 4);
  }
  check_transaction test1 {
    CREATE TABLE t1(a, b);
    INSERT INTO t1 VALUES(5, 6);
  }
} {}

do_multi_test complex_transactions {
  setup_transaction test2 {
    CREATE TABLE t(a, b);
    INSERT INTO t VALUES(1, 2);
    BEGIN;
    INSERT INTO t VALUES(3, 4);
  }
  set result
  lappend result {1 2}
  lappend result {3 4}
  db eval COMMIT
  lappend result done
} { done {1 2} {3 4} done }

do_test complex-1.3 {
  setup_transaction test3 {
    CREATE TABLE t(a, b);
    BEGIN;
    INSERT INTO t VALUES(1, 2);
    INSERT INTO t VALUES(3, 4);
    ROLLBACK;
  }
  set result
  lappend result {1 2}
  db eval "SELECT * FROM t"
  set result $result
} {1 2}

ifcapable dbconfig {
  do_test complex-1.4 {
    setup_transaction test4 {
      PRAGMA database_list;
      CREATE TABLE t(a, b);
      INSERT INTO t VALUES(1, 2);
    }
    db eval {
      SELECT name FROM t;
      PRAGMA wal_checkpoint;
      SELECT name FROM t;
    }
  } {t {}}

  do_test complex-1.5 {
    setup_transaction test5 {
      PRAGMA journal_mode = 2;
      CREATE TABLE t(a, b);
      INSERT INTO t VALUES(1, 2);
    }
    db eval {
      SELECT name FROM t;
      PRAGMA database_name;
      SELECT name FROM t;
    }
  } {t t {}}
}

do_test complex-1.6 {
  set result
  lappend result {1 2}
  lappend result {3 4}
} {{3 4} {3 4}}

finish_test