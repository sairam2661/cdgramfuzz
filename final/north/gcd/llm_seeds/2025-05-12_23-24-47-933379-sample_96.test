set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix sql
set database db_connection

proc get_database {sql_script} {
  global db_connection
  execsql $sql_script $db_connection
  return
}

proc execute_and_fetch {sql_script} {
  global db_connection
  set result ""
  foreach row {r1 r2} {
    foreach value $r1 $r2 {
      lappend result $value
    }
  }
  return $result
}

set db_connection "in memory: :memory:"

do_test sql-1.1 {
  get_database {
    CREATE TABLE a(x);
    INSERT INTO a VALUES(1);
    INSERT INTO a VALUES(2);
    INSERT INTO a VALUES(3);
  }
  get_database {
    SELECT 1
  }
} {1}

do_test sql-1.2 {
  get_database {
    BEGIN;
    INSERT INTO a VALUES(4);
    COMMIT;
  }
  get_database {
    SELECT count(*) FROM a;
  }
} {4}

ifcapable {wal} {
  get_database {
    PRAGMA journal_mode = 'wal';
  }
  get_database {
    PRAGMA journal_mode;
  }
} {wal}

do_execsql_test sql-2.1 {
  CREATE TABLE b(y, z);
  INSERT INTO b VALUES (5, 6);
  SELECT z FROM b WHERE y = 5;
} {6}

set data_result {}
for {set i 0} {$i 100} {incr i} {
  append data_result "[expr int(rand()*12)] "
}
set data_result "[split [regsub -all { [^0-9] } $data_result {}] { } ]"

do_test sql-2.2 {
  execute_and_fetch {
    CREATE TABLE c AS SELECT randint BETWEEN 0 AND 11 AS i FROM generate_series BETWEEN 0 AND 99
  }
} "$data_result"

do_catchsql_test sql3.1 {
  PRAGMA page_size = 8192
} {1 {page size must be a power of 2 between 512 and 32768}}

finish_test