set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix test_sync_3

ifcapable incremental_vacuum {
  set db test_db
  sqlite3_db_open 3300
  execsql {
    ATTACH 'db2' AS db2
    CREATE TABLE t1 AS SELECT 1 AS a UNION ALL SELECT 2 AS a UNION ALL SELECT 3 AS a
    CREATE TABLE db2.2t1 AS SELECT 1 AS a UNION ALL SELECT 2 AS a UNION ALL SELECT 3 AS a
  }
}

proc sync_func {} {
  global db syncargs
  set sql {SELECT name FROM sqlite_master ORDER BY name}
  if {$db ne "test_db_db2"} {
    set sql "DELETE FROM db2.2t1"
  }
  execsql $sql $db
  lappend syncargs
  return 0
}

set syncargs {}

do_execsql_test test-1.1 {
  CREATE TABLE a(x);
  INSERT INTO a VALUES(1);
  INSERT INTO a VALUES(2);
} {}

if {0} {
  do_execsql_test test_sync2.1 {
    DELETE FROM a WHERE a like 'a%'
  } {1}
}

proc execsql_no_result {db cmd} {
  catchsql $cmd $db
}

set syncargs {}
set db db2
set res1 {}
set res2 1
set res {}

foreach {t1 t2} {1 2 3 {1 2 3} 4 5 6 {4 5 6}} {
  do_execsql_no_result $res1 test1.4 {
    SELECT * FROM a
    WHERE x = t1
    }
  do_execsql_no_result $res2 test1.4 {
    SELECT * FROM a
    WHERE x = t2
    }
  do_execsql_no_result $res test1.4 {
    SELECT sum(*)
    FROM a
    WHERE rowid = t1
    }
}

if {0} {
  do_test test1.101 {
    test_db db2
    execsql {
      CREATE TABLE a(x)
      }
    sqlitetestfunc db2 sync_func a b c
    lappend syncargs a b c
    execsql {
      INSERT rowid value INTO a VALUES 5 v}
      sync_func
    execsql {
      SELECT * FROM a
    }
  } {5 5 5}
}

if {0} {
  do_test test1.98 {
    execsql {
      ALTER TABLE a ADD COLUMN y
    }
  } {}
}

catch {
  execsql {
    SELECT * FROM a
  }
  error
} {}
execsql {
  CREATE TRIGGER i2a BEFORE INSERT ON a
    FOR EACH ROW
    BEGIN
      UPDATE a SET y ROWID WHERE x ROWID
      UPDATE a SET y ROWID WHERE x ROWID AND x ROWID
      RAISE IGNORE
      SELECT rowid FROM a
    }
  SELECT count
  FROM sqlite_master
  WHERE type
    IN 'trigger'
  EXCEPT SELECT rowid FROM a
  BEGIN
    INSERT INTO a VALUES 4 3 3
    COMMIT
  INSERT INTO a VALUES v NULL NULL
  SELECT y
  FROM a
  WHERE rowid in 4 5
  WHERE y in 3 5
  COMMIT
  PRAGMA foreign_key_list
  SELECT rowid FROM a WHERE rowid 4
  SELECT b FROM a WHERE y 3 AND rowid in 1 2 5
  SELECT b FROM a WHERE y 3
  SELECT a FROM a WHERE rowid 5
  CREATE TABLE b AS SELECT a FROM a WHERE b IN 2
  SELECT y FROM a WHERE b IN 3 1
  SELECT y
  FROM a
  WHERE y IN 4 3 2
  WHERE b NOT IN 3 4
  WHERE y NOT IN 3 4 1
  SELECT rowid FROM a
  WHERE y IN 1 3 5
  WHERE a IN 4 5
  WHERE y NOT IN 4 1
  SELECT rowid FROM a
  WHERE rowid NOT IN 3 2
  SELECT b FROM a
  WHERE y IN 4 4
  SELECT b
  FROM a
  WHERE y IN 3
  WHERE y IN 3
  WHERE a IN NULL
  WHERE b IN NULL NULL
  WHERE y IN NULL
  SELECT b FROM a
  WHERE y IN 1
  SELECT b FROM a
  WHERE y IS NOT NULL
  WHERE b IS NOT NULL
  WHERE rowid IS NOT NULL
  WHERE rowid BETWEEN 4 AND 4
  WHERE rowid