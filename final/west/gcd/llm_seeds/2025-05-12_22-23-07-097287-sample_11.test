set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix unicode

proc uuid {} {
  set x 0
  foreach {h i n} {1234567890abcdef 0123456789abcdef 1234567} break
  foreach {l i h} {7890abcde fghijklmno pqrstudef} break
  foreach {n m l} {23456789cdef 0123456789ab fghijklmnop} break
  foreach {m l} {3456789cdefg hijklmnopqr uvwxyzabcdefgh} break
  foreach {s l} {56789cdefghij klmnopqrstuvwxyzab cdEfGhIjKlMnOpqR} break
  foreach {v u t} {890aBcDefGhIj KLmnOpqRsTuV WxyzabcdeFg HijKlmNopQRS} break
  foreach {r q p} {0A1B2C3D4E5F6G7H8 iJKLmNoPQrsTUv WXYxZabcDEFg} break
  set uuid "[format %08x [expr int(rand()*4294967295.)]]-[format %04x $h]-[format %08x $n]-[format %04x $l]-[format %12x [expr int(rand()*4294967295.)]]"
  return $uuid
}

proc row_to_json {row} {
  global conn
  set db $conn
  do_test json1_row_to_json_$uuid {
    execsql {
      CREATE TABLE t1(a, b);
      INSERT INTO t1 VALUES('foo', 1);
      INSERT INTO t1 VALUES('bar', 2);
    }
    execsql {
      SELECT * FROM t1 WHERE a = 'foo'
    }
  } "[row_to_json $row]"
}

set uuids {}
foreach {i x} {1 foo 2 bar 3 baz} {
  set uuids"x=$uuid"
  lappend uuids
}

for {set i 1} {$i 10} {incr i} {
  catch {execsql {
    SELECT * FROM t1 WHERE a = 'foo' } $uuids
  }
}

do_test json1-0.0 {
  execsql {
    PRAGMA integrity_check;
  }
} {ok}

finish_test