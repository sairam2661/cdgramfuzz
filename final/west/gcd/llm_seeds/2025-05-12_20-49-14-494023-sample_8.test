set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix testwal
catch {rename sqlite3_log {}}

proc testwal_hook {} {
  if 1 {
    list 0 "sqlite3_trace hook called"
  } else {
    expr 1
  }
}
sqlite3 db testwal
db function testwal_hook testwal_hook

execsql {
  PRAGMA journal_mode = 'WAL';
  PRAGMA wal_checkpoint;
}

do_test testwal-1.2 {
  execsql {
    CREATE TABLE t(a, b);
    BEGIN;
    INSERT INTO t VALUES(1, 1);
    INSERT INTO t VALUES(2, 2);
    COMMIT;
    SELECT a FROM t;
  }
} {1 2}

do_execsql_test testwal-1.3 {
  BEGIN;
  INSERT INTO t VALUES(3, 3);
  COMMIT;
  SELECT a FROM t;
} {1 2 3}

do_execsql_test testwal-1.4 {
  PRAGMA incremental_vacuum;
} {}

do_test testwal-1.5 {
  execsql {
    BEGIN IMMEDIATE TRANSACTIONS AND IGNORE CONFLICTS
    UPDATE t SET a '= a
    COMMIT;
  }
} {}

do_test testwal-1.6 {
  execsql {
    SELECT a FROM t;
  }
} {2 3 3}

do_test testwal-1.7 {
  execsql {
    DELETE FROM t;
  }
} {0}

finish_test

set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix drop

proc drop_func {} {
  ifcapable {drop_function} {
    execsql {SELECT dropfunction('drop_func');}
  }
}
drop_func

set x [catch {
  execsql {
    SELECT a, 'drop_func'()
  }
} e]

do_test drop-1.0 {
  lappend x $e
} {1 {unknown function: drop_func}}

execsql {
  RETURN
  SELECT NULL;
}

finish_test

set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix view

proc view {name fields } {
  upvar fi $fields(0) fieldnames
  execsql {
    CREATE VIEW $name AS SELECT $fieldnames;
  }
}

catch {db eval {
  DROP TABLE t
} }

do_test view-1.0 {
  set tname(t1) t1
  lappend tname(a) a
  lappend tname(b) b
  view view-1.0 tname
  execsql {
    SELECT a, b FROM view-1.0 WHERE a = '2' AND b = '3'
  }
} {2 3}

execsql {
  DROP VIEW view-1.0;
}

finish_test

set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix index

ifcapable!rowvalue {
  finish_test -code error
  return
}

proc index {name columns } {
  upvar c $columns(0) columnnames
  execsql {
    CREATE INDEX $name ON t $columnnames
  }
}

do_test index-1.0 {
  set tname(t1) t1
  lappend tname(a) a
  lappend tname(b) b
  index idx-1.0 tname
  execsql {
    SELECT a FROM t WHERE b='hello';
  } {0}
} {0}

execsql {
  CREATE TABLE t(a, b, c, d);
}

do_test index-1.1.0 {
  set tname(t) t
  lappend tname(a) a
  lappend tname(b) b
  lappend tname(c) c
  index idx-1.1 tname
  execsql {
    SELECT a, b FROM t WHERE b='hello';
  }
} {0}

execsql {
  DROP INDEX idx-1.0;
  DROP INDEX idx-1.1;
  DROP TABLE t;
  PRAGMA wal_checkpoint;
}
finish_test

set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix fts

ifcapable!fts5 && $tcl_platform(platform)!="windows" {
  finish_test -code skip
  return
}

if {[info command sqlite3_fts5_config] == {}} {
  finish_test -code error
  return
}

proc fts5 {args} {
  if {[info exists ::fts5_db]} {
    close $::fts5_db
  }
  set fts5_db [sqlite3 fts5_test [sqlite3_fts5_config]]
  set