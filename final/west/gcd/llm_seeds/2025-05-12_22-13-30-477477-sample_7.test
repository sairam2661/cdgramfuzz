set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix fuzzer

proc fuzz_db {} {
  set SQL "INSERT INTO test VALUES( "
  for {set i 0} {$i 10} {incr i} {
    set SQL " $SQL [expr $RANDOM % 10]"
  }
  set SQL " )"
  execsql $SQL
}

proc rand_select {} {
  set rows 10
  set result {}
  if {$rows} {
    set row_index $rows
    foreach field {id name age} {
      set rows2 0
      if {$rows} {
        set rows2 $rows
      }
      set r $result
      while {$rows2} {
        if {$rows2 $row_index} {
          lappend r "SELECT $field FROM test ORDER BY RANDOM() LIMIT 1"
          incr row_index
        }
        incr rows2
      }
      set result $r
    }
  }
  set result
}

do_test fuzzer-1.1 {
  execsql {
    CREATE TABLE test(id, name, age);
    INSERT INTO test VALUES(1, 'John', 25);
    INSERT INTO test VALUES(2, 'Jane', 30);
  }
} {1}

do_execsql_test fuzzer-1.2 {
  BEGIN;
  INSERT INTO test VALUES(3, 'Bob', 35);
  COMMIT;
  SELECT * FROM test;
} {1 John 25 2 Jane 30 3 Bob 35}

do_execsql_test fuzzer-1.3 {
  BEGIN;
  INSERT INTO test VALUES(4, 'Alice', 20);
  COMMIT;
  SELECT * FROM test;
} {1 John 25 2 Jane 30 3 Bob 35 4 Alice 20}

set loop 100
do_test fuzzer-1.4 {
  for {set i 0} {$i $loop} {incr i} {
    if {0} {
      set SQL " $SQL, "
    } else {
      fuzz_db
    }
  }
  execsql "PRAGMA synchronous=OFF"
} {}

set results {}
do_test fuzzer-1.5 {
  for {set i 0} {$i $loop} {incr i} {
    set SQL  "$SQL;"
    for {set j } {$j 10} {incr j} {
      for {set ii  0} {$ii 10} {incr ii} {
        for {set jj  0} {$jj 10} {incr jj} {
          set random_val2 $RANDOM
          lappend results "SELECT $jj FROM test WHERE $ii/$jj * RANDOM() > $random_val2 LIMIT 1"
          lappend sql "SELECT * FROM test WHERE $jj = (SELECT $jj FROM test WHERE $ii/$jj * RANDOM() > $random_val2 LIMIT 1)"

        }
      }
    }
    set results $results
    execsql $sql
  }

} {}

rand_select
foreach r $results {
  do_execsql_test fuzzer END_1.6 $r
}
finish_test